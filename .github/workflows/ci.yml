name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies (Ubuntu)
      if: matrix.os == "ubuntu-latest"
      run: |
        sudo apt install libssl-dev

    - name: Install Dependencies (Windows)
      if: matrix.os == "windows-latest"
      shell: pwsh
      run: |
        Choco-Install -PackageName openssl

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1  # not v2!
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: '6.2.2'
        cached: ${{ steps.cache-qt.outputs.cache-hit }}

    - name: get-cmake
      uses: lukka/get-cmake@v3.21.2

    - name: Configure CMake (Ubuntu)
      if: matrix.os == "ubuntu-latest"
      run: cmake -S . -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja

    - name: Configure CMake (Windows)
      if: matrix.os == "windows-latest"
      run: cmake -S . -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja -DOPENSSL_ROOT_DIR="C:/Program Files/OpenSSL-Win64"

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
